repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'android-apt'
apply plugin: 'jacoco-android'


buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'io.fabric.tools:gradle:1.+'
//        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId appId // from gradle.properties

        minSdkVersion 16
        targetSdkVersion 25
        versionCode appVersionCode.toInteger()
        versionName appVersionName // from gradle.properties
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "ru.roscha_akademii.medialib.common.MockAppRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree('proguard').asList().toArray()
        }
        debug {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree('proguard').asList().toArray()

            testCoverageEnabled true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        abortOnError true
        fatal 'StopShip'
    }
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled true
    xml.enabled true
}

jacocoAndroidUnitTestReport {
    excludes +=
            [
                    '**/*$PresentersBinder$*.class',
                    '**/*$PresentersBinder.class',
                    '**/*$ViewStateProvider.class',
                    '**/*$State$*.class',
                    '**/*$State.class',
                    'com/arellomobile/mvp/**',
                    '**/*inlined*.class'
            ]
}

def supportVersion = '25.0.0'
def daggerVersion = '2.6.1'
def supportTestVersion = '0.5'
def espressoVersion = '2.2.2'
def googlePlayVersion = '10.0.1'
def okHttpVersion = '3.2.0'
def storIoVersion = '1.12.2'
def mockitoVersion = '1.10.19'
def mockitoKotlinVersion = '0.11.0'
def moxyVersion = '1.4.4'
def robolectricVersion = "3.2.2"
def rxJavaVersion = "1.2.1"

dependencies {
//    compile project(':net')
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:multidex:1.0.1'

    // kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // support libraries
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:support-annotations:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"

    // http://stackoverflow.com/questions/37615379/travis-ci-build-doesnt-work-with-android-constraint-layout
    // https://code.google.com/p/android/issues/detail?id=212128
    compile 'com.android.support.constraint:constraint-layout:1.0.0'

    // google play services
    compile "com.google.android.gms:play-services-location:$googlePlayVersion"
    compile "com.google.android.gms:play-services-places:$googlePlayVersion"

    // dagger
    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    provided 'javax.annotation:jsr250-api:1.0'

    // retrofit
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'
    compile 'com.squareup.retrofit2:retrofit:2.0.0'
    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // rx
//    compile 'io.reactivex:rxandroid:1.2.1'
//    compile 'io.reactivex:rxjava:1.1.6'
//    compile 'pl.charmas.android:android-reactive-location:0.10@aar'


    // Moxy MVP
    compile "com.arello-mobile:moxy:$moxyVersion"
    compile "com.arello-mobile:moxy-android:$moxyVersion"
    compile "com.arello-mobile:moxy-app-compat:$moxyVersion"
    kapt "com.arello-mobile:moxy-compiler:$moxyVersion"

    // Mosby MVP
//    compile 'com.hannesdorfmann.mosby:mvp:2.0.1'
//    compile 'com.hannesdorfmann.mosby:viewstate:2.0.1'

    // fabric.io
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    // StorIO
    compile "com.pushtorefresh.storio:sqlite:$storIoVersion"
//    compile "com.pushtorefresh.storio:sqlite-annotations:$storIoVersion"
//    kapt "com.pushtorefresh.storio:sqlite-annotations-processor:$storIoVersion"

    // ExoPlayer
    compile 'com.google.android.exoplayer:exoplayer:r2.0.0'

    // Joda Time (for Android)
    compile "net.danlew:android.joda:2.9.5.1"

    // LeakCanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4'

    // Picasso
    compile 'com.squareup.picasso:picasso:2.5.2'

    // EventBus
    compile 'org.greenrobot:eventbus:3.0.0'

    ///////////////////////////////////////////////
    // test
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"


    testCompile 'junit:junit:4.12'
    testCompile "org.assertj:assertj-core:1.7.0"

    // joda-time for tests
    testCompile 'joda-time:joda-time:2.9.5'

    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile "org.robolectric:shadows-multidex:${robolectricVersion}"

    testCompile "com.squareup.okhttp3:mockwebserver:$okHttpVersion"

    testCompile("com.nhaarman:mockito-kotlin:$mockitoKotlinVersion") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-runtime'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }

    testCompile "io.reactivex:rxjava:$rxJavaVersion"


    ///////////////////////////////////////////////
    // androidTest

    androidTestCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    androidTestCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestCompile "com.google.dexmaker:dexmaker:1.2"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:1.2"
    androidTestCompile("com.nhaarman:mockito-kotlin:$mockitoKotlinVersion") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-runtime'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
        exclude group: 'org.mockito', module: 'mockito-core' // dexmaker doesn't support mockito 2
    }


    androidTestCompile "com.android.support:support-annotations:$supportVersion"

    androidTestCompile("com.android.support.test:runner:$supportTestVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    androidTestCompile "com.android.support.test:rules:$supportTestVersion"

    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion") {
        exclude group: 'javax.inject'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'javax.inject'
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'design'
    }

    androidTestApt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestCompile "com.squareup.okhttp3:mockwebserver:$okHttpVersion"

}
